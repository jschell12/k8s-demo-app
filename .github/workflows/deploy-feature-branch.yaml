name: Deploy Feature Branch

on:
  push:
    branches:
      - feature/*

  delete:
    branches:
      - feature/*

jobs:
  deploy_feature:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: dev

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Extract the current branch name
      - name: Determine current branch
        id: current_branch
        run: echo "branch_name=${GITHUB_REF_NAME##*/}" >> $GITHUB_ENV

      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and tag the Docker image
      - name: Build and Tag Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:${{ env.branch_name }} .

      # Push the Docker image to the registry
      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ env.branch_name }}

      # Set up Kubernetes and Helm
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      # Create a temporary namespace
      - name: Create namespace
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl create namespace ${{ env.branch_name }} --dry-run=client -o yaml | kubectl apply -f -

      # Deploy the Helm chart
      - name: Deploy Helm chart
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig
          helm upgrade --force --install k8s-demo-app ./chart \
            --namespace ${{ env.branch_name }} \
            --set image.repository=ghcr.io/${{ github.repository_owner }}/k8s-demo-app \
            --set image.tag=${{ env.branch_name }} \
            --wait

  cleanup_feature:
    if: github.event_name == 'delete'
    runs-on: ubuntu-latest
    environment: dev

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Extract the deleted branch name
      - name: Get deleted branch name
        id: deleted_branch
        run: |
          FULL_REF=${{ github.event.ref }}
          BRANCH_NAME=$(echo "${FULL_REF}" | sed -E 's|^refs/heads/.+?/([^/]+)$|\1|')
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_ENV

      # Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      # Set up Kubernetes and Helm
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      # Delete Helm release
      - name: Delete Helm release
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig
          helm uninstall k8s-demo-app --namespace ${{ env.branch_name }}

      # Delete namespace
      - name: Delete namespace
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl delete namespace ${{ env.branch_name }}
